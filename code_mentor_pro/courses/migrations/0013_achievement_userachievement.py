# Generated by Django 5.1.9 on 2025-06-01 11:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def create_achievements(apps, schema_editor):
    Achievement = apps.get_model("courses", "Achievement")

    achievements_data = [
        {
            "code": "ENROLL_FIRST_COURSE",
            "title": "Зачислиться на 1 курс",
            "description": "Начните обучение, зачислившись хотя бы на один курс.",
        },
        {
            "code": "COMPLETE_FIRST_SURVEY",
            "title": "Пройти 1 опрос",
            "description": "Ответьте хотя бы на один опрос.",
        },
        {
            "code": "COMPLETE_FIVE_SURVEYS",
            "title": "Пройти 5 опросов",
            "description": "Ответьте на пять опросов.",
        },
        {
            "code": "COMPLETE_TEN_SURVEYS",
            "title": "Пройти 10 опросов",
            "description": "Ответьте на десять опросов.",
        },
        {
            "code": "COMPLETE_FIRST_LESSON",
            "title": "Пройти 1 урок",
            "description": "Пройдите хотя бы один урок до конца.",
        },
        {
            "code": "COMPLETE_FIVE_LESSONS",
            "title": "Пройти 5 уроков",
            "description": "Завершите пять уроков.",
        },
        {
            "code": "COMPLETE_TEN_LESSONS",
            "title": "Пройти 10 уроков",
            "description": "Завершите десять уроков.",
        },
    ]

    for data in achievements_data:
        Achievement.objects.update_or_create(
            code=data["code"],
            defaults={
                "title": data["title"],
                "description": data["description"],
            },
        )


class Migration(migrations.Migration):

    dependencies = [
        ("courses", "0012_useranswer_status"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                (
                    "code",
                    models.CharField(
                        choices=[
                            ("ENROLL_FIRST_COURSE", "Зачислиться на 1 курс"),
                            ("COMPLETE_FIRST_SURVEY", "Пройти 1 опрос"),
                            ("COMPLETE_FIRST_LESSON", "Пройти 1 урок"),
                        ],
                        max_length=64,
                        unique=True,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.ImageField(
                        blank=True, null=True, upload_to="achievements/icons/"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserAchievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Дата обновления"),
                ),
                ("awarded_at", models.DateTimeField(auto_now_add=True)),
                ("is_notified", models.BooleanField(default=False)),
                (
                    "achievement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.achievement",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "achievement")},
            },
        ),
        migrations.RunPython(
            create_achievements, migrations.RunPython.noop, elidable=True
        ),
    ]
